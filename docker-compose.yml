services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: webhook_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: webhook_management
      POSTGRES_USER: webhook_user
      POSTGRES_PASSWORD: webhook_password
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - webhook-network

  # Redis Cache and Queue
  redis:
    image: redis:7-alpine
    container_name: webhook_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - webhook-network

  # Laravel Application
  app:
    build:
      context: .
      target: production
    container_name: webhook_app
    restart: unless-stopped
    depends_on:
      - db
      - redis
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=webhook_management
      - DB_USERNAME=webhook_user
      - DB_PASSWORD=webhook_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - QUEUE_CONNECTION=redis
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
    volumes:
      - storage_data:/var/www/html/storage
      - ./docker/.env.docker:/var/www/html/.env
    networks:
      - webhook-network

  # Queue Worker
  queue:
    build:
      context: .
      target: queue-worker
    container_name: webhook_queue
    restart: unless-stopped
    depends_on:
      - db
      - redis
      - app
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=webhook_management
      - DB_USERNAME=webhook_user
      - DB_PASSWORD=webhook_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - QUEUE_CONNECTION=redis
    volumes:
      - storage_data:/var/www/html/storage
      - ./docker/.env.docker:/var/www/html/.env
    networks:
      - webhook-network

  # Task Scheduler
  scheduler:
    build:
      context: .
      target: scheduler
    container_name: webhook_scheduler
    restart: unless-stopped
    depends_on:
      - db
      - redis
      - app
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=webhook_management
      - DB_USERNAME=webhook_user
      - DB_PASSWORD=webhook_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - QUEUE_CONNECTION=redis
    volumes:
      - storage_data:/var/www/html/storage
      - ./docker/.env.docker:/var/www/html/.env
    networks:
      - webhook-network

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: webhook_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./public:/var/www/html/public
      - storage_data:/var/www/html/storage
    depends_on:
      - app
    networks:
      - webhook-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  storage_data:
    driver: local

networks:
  webhook-network:
    driver: bridge
